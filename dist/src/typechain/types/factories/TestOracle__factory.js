"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestOracle__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "ethOutput",
                type: "uint256",
            },
        ],
        name: "getTokenValueOfEth",
        outputs: [
            {
                internalType: "uint256",
                name: "tokenInput",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060d18061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063d1eca9cf14602d575b600080fd5b603c6038366004605f565b604e565b60405190815260200160405180910390f35b600060598260026077565b92915050565b600060208284031215607057600080fd5b5035919050565b8082028115828204841417605957634e487b7160e01b600052601160045260246000fdfea2646970667358221220e231c2b89a6c9a44e3cd6ea1ce5ebe70af35ed8c80e612ab601d1b6d8a7d406f64736f6c63430008110033";
class TestOracle__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
TestOracle__factory.bytecode = _bytecode;
TestOracle__factory.abi = _abi;
exports.TestOracle__factory = TestOracle__factory;
//# sourceMappingURL=TestOracle__factory.js.map