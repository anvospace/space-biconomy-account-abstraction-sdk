"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Upgrader__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
        ],
        name: "upgrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060cf8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630900f01014602d575b600080fd5b605c6038366004605e565b7f37722d148fb373b961a84120b6c8d209709b45377878a466db32bbc40d95af2655565b005b600060208284031215606f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609257600080fd5b939250505056fea2646970667358221220f9564bcbf74540862f4d61e96b3d4b45cb3f82e69a3378d6b05fa9b006b7cbad64736f6c63430008110033";
class Upgrader__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
Upgrader__factory.bytecode = _bytecode;
Upgrader__factory.abi = _abi;
exports.Upgrader__factory = Upgrader__factory;
//# sourceMappingURL=Upgrader__factory.js.map